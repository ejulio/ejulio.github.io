<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Júlio César Batista</title><link>https://juliocesarbatista.com/tags/python/</link><description>Recent content in Python on Júlio César Batista</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Thu, 12 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://juliocesarbatista.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Why is my FastAPI throughput so low?</title><link>https://juliocesarbatista.com/posts/why-is-my-fastapi-throughput-so-low/</link><pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/why-is-my-fastapi-throughput-so-low/</guid><description>&lt;p>No blog da Shippo &lt;a href="https://goshippo.com/blog/why-is-my-fastapi-throughput-so-low" class="external-link" target="_blank" rel="noopener">https://goshippo.com/blog/why-is-my-fastapi-throughput-so-low&lt;/a>&lt;/p></description></item><item><title>A tale of concurrency through creativity in Python: a deep dive into how gevent works</title><link>https://juliocesarbatista.com/posts/a-tale-of-concurrency-through-creativity-in-python/</link><pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/a-tale-of-concurrency-through-creativity-in-python/</guid><description>&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GunMToxbE0E?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
 >&lt;/iframe>
 &lt;/div>

&lt;ul>
&lt;li>&lt;code>gevent&lt;/code> usa &lt;code>greenlets&lt;/code> (corotinas ou, &lt;code>goroutines&lt;/code> em &lt;em>go&lt;/em>) ao invés de &lt;em>threads&lt;/em> do sistema operacional.
&lt;ul>
&lt;li>Essas operações são colaborativas, portanto elas precisam ceder (&lt;code>yield&lt;/code>) a execução para outras rotinas.&lt;/li>
&lt;li>Por serem apenas rotinas no programa, sem intervenção do sistema operacional, são mais leves.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Interessante como a biblioteca em &lt;em>C&lt;/em> &lt;code>gevent&lt;/code> resolve o problema.
&lt;ul>
&lt;li>A biblioteca manipula a &lt;em>stack&lt;/em>/&lt;em>heap&lt;/em> para dar continuidade em uma rotina que deceu a execução.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>libev&lt;/code> foi usada para manipular o &lt;em>loop&lt;/em> de eventos e controlar a execução das &lt;code>greenlets&lt;/code>&lt;/li>
&lt;li>Com &lt;em>monkey patching&lt;/em> é possível tornar um código síncrono em assíncrono.
&lt;ul>
&lt;li>Possível porque &lt;code>gevent&lt;/code> troca &lt;em>socket&lt;/em> bloqueante por não bloqueante.&lt;/li>
&lt;li>Porém só funciona para biblioteca em &lt;em>python&lt;/em>.
&lt;ul>
&lt;li>Se estiver usando uma biblioteca de banco de dados em &lt;em>C&lt;/em> com &lt;em>wrapper&lt;/em> em &lt;em>python&lt;/em>, não vai funcionar.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Só funciona para &lt;em>I/O&lt;/em>, rotinas que precisam de muita CPU não fazem muito sentido rodar com &lt;em>greenlets&lt;/em> (provavelmente que &lt;em>threads&lt;/em> sejam um modelo melhor).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Deve haver colaboração entre as rotinas, se uma delas não ceder a execução para que as demais continuem quando estiverem prontas, não haverá concorrência, apenas uma rotina continua.&lt;/li>
&lt;/ul></description></item><item><title>Isolamento de transações em bancos de dados relacionais</title><link>https://juliocesarbatista.com/posts/isolamento-transacoes-bancos-dados-relacionais/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/isolamento-transacoes-bancos-dados-relacionais/</guid><description>&lt;p>Estava lendo sobre os níveis de &lt;a href="https://www.postgresql.org/docs/current/transaction-iso.html" class="external-link" target="_blank" rel="noopener">isolamento de transações em bancos de dados relacionais, especificamente no PostgreSQL&lt;/a> e decidi fazer um projeto em python para simular os cenários de concorrência.
&lt;a href="https://github.com/ejulio/transaction-isolation-levels" class="external-link" target="_blank" rel="noopener">O projeto está disponível no GitHub&lt;/a> e espero que ajude a elucidar alguns detalhes sobre o
funcionamento de transações em bancos de dados.
Usei &lt;code>asyncio&lt;/code> para a &amp;ldquo;concorrência&amp;rdquo; e gerenciar a execução entre duas &amp;ldquo;threads&amp;rdquo;, permitindo a interpolação de comandos SQL
em duas transações separadas em momento especîficos para avaliar os resultados.&lt;/p></description></item><item><title>Correção ortográfica com índice k-gram</title><link>https://juliocesarbatista.com/posts/correcao-ortografica-k-gram-index/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/correcao-ortografica-k-gram-index/</guid><description>&lt;p>Ao escrever uma consulta, o usuário pode cometer erros ortográficos durante a digitação.
Esses erros podem ter duas formas: escrita incorreta da palavra (&lt;em>comesso&lt;/em> ao invés de &lt;em>começo&lt;/em>), contexto (&lt;em>no meu casa&lt;/em> ao invés de &lt;em>na minha casa&lt;/em>).
Note que no primeiro exemplo, a palavra está incorreta; no segundo, as palavras estão corretas mas o contexto é errado.
Nesse momento, a ideia é ver como é possível fazer a correção de erros de escrito (primeiro caso).
Uma forma de fazer isso é comparando partes menores das palavras (&lt;em>substrings&lt;/em>, ou &lt;em>k-grams&lt;/em>).
Um &lt;em>k-gram&lt;/em> define uma &lt;em>substring&lt;/em> de tamanho &lt;em>k&lt;/em>.
Portanto, os &lt;em>3-grams&lt;/em> de &lt;em>começo&lt;/em> são: &lt;code>com&lt;/code>, &lt;code>ome&lt;/code>, &lt;code>meç&lt;/code>, &lt;code>eço&lt;/code>.
Um detalhe importante é que, é comum adicionar $k - 1$ caractéres especiais, normalmente &lt;code>$&lt;/code> no início e fim da palavra.
Assim, os &lt;em>3-grams&lt;/em> de &lt;em>começo&lt;/em> são: &lt;code>$$c&lt;/code>, &lt;code>$co&lt;/code>, &lt;code>com&lt;/code>, &lt;code>ome&lt;/code>, &lt;code>meç&lt;/code>, &lt;code>eço&lt;/code>, &lt;code>ço$&lt;/code>, &lt;code>o$$&lt;/code>.
Uma vez que os &lt;em>3-grams&lt;/em> da palavra são conhecidos, é possível efetuar o mesmo procedimento para a palavras que será usada na comparação.
Nesse caso, &lt;em>comesso&lt;/em>: &lt;code>$$c&lt;/code>, &lt;code>$co&lt;/code>, &lt;code>com&lt;/code>, &lt;code>ome&lt;/code>, &lt;code>mes&lt;/code>, &lt;code>ess&lt;/code>, &lt;code>sso&lt;/code>, &lt;code>so$&lt;/code>, &lt;code>o$$&lt;/code>.&lt;/p></description></item><item><title>Executando consultas por frases: Positional Index</title><link>https://juliocesarbatista.com/posts/phrase-queries-positional-index/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/phrase-queries-positional-index/</guid><description>&lt;p>Para realizar a consulta por frases (sequências de palavras) é necessário um &lt;a href="https://juliocesarbatista.com/post/phrase-queries/" class="external-link" target="_blank" rel="noopener">índice &lt;em>k-gram&lt;/em>&lt;/a>.
Porém, criar um índice todas as combinações de termos pode ocupar muito espaço em disco/memória.
Principalmente se for necessário indexar combinações de 5 ou mais palavras, visto que muitas combinações podem aparecer apenas uma ou outra vez.
Uma solução para esse problema é um &lt;em>positional index&lt;/em> (índice de posições).&lt;/p>
&lt;p>Em um índice invertido, termos são mapeados para listas com &lt;em>ids&lt;/em> de documentos.
No &lt;em>positional index&lt;/em>, além dos &lt;em>ids&lt;/em>, também são mantidas as posições em que o termo aparece no documento.&lt;/p></description></item><item><title>Compressão de índices: Variable Byte Encoding</title><link>https://juliocesarbatista.com/posts/compressao-indices-vbe/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/compressao-indices-vbe/</guid><description>&lt;p>Uma vez que o índice invertido está montado com &lt;em>postings lists&lt;/em>, é necessário persistí-lo em disco.
O detalhe é que, se o índice for persistido como texto em UTF-8, cada caractére vai requisitar ao menos 8 bytes.
Portando, o id &lt;code>4568912&lt;/code> requer 7 bytes para ser armazenado.
A contrapartida é que, se for armazenado como um numérico (&lt;code>int&lt;/code> por exemplo), precisa de apenas 4 bytes.
Porém, é possível conseguir uma melhora na compressão ao considerar a estrutura de dados que será armazenada.
Nesse caso, para cada &lt;em>termo&lt;/em>, uma lista de números é persistida.
Por exemplo, o termo &lt;em>t&lt;/em> tem a lista de ids &lt;code>[652389, 652390, 652399, 652659]&lt;/code>, requisitando &lt;code>4 * 4 * 8 = 128 bytes&lt;/code>.
Mas é possível ir além dado que a lista de ids é ordenada, assim é possível guardar apenas os &lt;em>gaps&lt;/em> (saltos) entre os ids.
Seguindo o exemplo anterior, a lista a ser persistida seria &lt;code>[652389, 1, 9, 260]&lt;/code> porque &lt;code>[652389, 652390 = 652389 + 1, 652399 = 652390 + 9, 652659 = 652399 + 260]&lt;/code>.
Mesmo assim, asinda é necessário guardar 4 inteiros totalizando 128 bytes.
Mas agora, obervando bem os valores, é possível perceber que apenas &lt;code>652389&lt;/code> e &lt;code>260&lt;/code> requerem um tipo &lt;code>int&lt;/code>, os valores &lt;code>1&lt;/code> e &lt;code>9&lt;/code> podem ser armazenados com apenas 1 byte cada um (1 byte pode armazenar valores de 0 à 255).
Assim, o espaço foi reduzido para &lt;code>2 * 4 * 8 + 2 * 8 = 80 bytes&lt;/code> (um pouco mais da metade do espaço necessário anteriormente).&lt;/p></description></item><item><title>Executando consultas por frases</title><link>https://juliocesarbatista.com/posts/phrase-queries/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/phrase-queries/</guid><description>&lt;p>A partir de um &lt;a href="https://juliocesarbatista.com/post/indice-invertido/" class="external-link" target="_blank" rel="noopener">índice de termos/documentos&lt;/a> só é possível efetuar consultas de ocorrência de termos e filtros com operadores &lt;code>AND&lt;/code>, &lt;code>OR&lt;/code> e &lt;code>NOT&lt;/code>.
Entretanto, o que é preciso para executar uma consulta por &lt;em>presidente do Brasil&lt;/em>?
A forma mais simples, é converter essa consulta em &lt;code>presidente AND do AND Brasil&lt;/code> (o &lt;em>do&lt;/em> pode ser removido se quiser remover &lt;em>stop words&lt;/em>).
O detalhe é que essa consulta vai retornar qualquer documento que contenha &lt;em>presidente&lt;/em> e &lt;em>Brasil&lt;/em>, mas que não não fale necessariamento do &lt;em>presidente do Brasil&lt;/em>.
Um exemplo seria: &lt;em>O presidente do conselho está trabalhando para aumentar os empregos no Brasil&lt;/em>.
Esse documento é retornado pela consulta &lt;code>presidente AND do AND Brasil&lt;/code>, mas não tem nada a ver com &lt;em>presidente do Brasil&lt;/em>.
Portanto, é necessário melhorar a estrutura de índice para obter melhores resultados pelas consultas.&lt;/p></description></item><item><title>Algoritmos para consultar em índices</title><link>https://juliocesarbatista.com/posts/algoritmos-indices/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/algoritmos-indices/</guid><description>&lt;p>Uma das vantagens do &lt;a href="https://juliocesarbatista.com/post/indice-invertido/" class="external-link" target="_blank" rel="noopener">índice invertido&lt;/a> é a possibilidade de otimizar os algoritmos utilizados nas consultas.
Esses algoritmos já são implementados por &lt;code>set&lt;/code> no python, mas não garantem a sequência dos &lt;code>ids&lt;/code> dos documentos e também não permitem algumas otimizações.
Portanto, é necessário passar por esses algoritmos para ver as extensões e como elas podem ajudar.&lt;/p>
&lt;h2 id="intersecção-de-conjuntos">
 intersecção de conjuntos
 &lt;a class="heading-link" href="#intersec%c3%a7%c3%a3o-de-conjuntos">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link para o cabeçalho">&lt;/i>
 &lt;span class="sr-only">Link para o cabeçalho&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>Uma consulta &lt;code>casa AND blumenau&lt;/code> precisa efetuar a intersecção entre os documentos de &lt;code>casa&lt;/code> e os documentos de &lt;code>blumenau&lt;/code>.
O algoritmo de intersecção é uma solução para esse problema&lt;/p></description></item><item><title>Índice invertido (inverted index)</title><link>https://juliocesarbatista.com/posts/indice-invertido/</link><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/indice-invertido/</guid><description>&lt;p>&lt;a href="https://juliocesarbatista.com/post/matriz-incidencia-termo-documento/" class="external-link" target="_blank" rel="noopener">A matriz de incidência termo-documento&lt;/a> é uma das formas de representar um índice de termos por documento.
Mesmo usando o conceito de uma matriz esparsa, essa estrutura pode crescer muito para ser usada em memória.
Uma alternativa para esse caso é usar um índice invertido (&lt;em>inverted index&lt;/em>).&lt;/p>
&lt;p>Dados os seguintes documentos como exemplo:&lt;/p>
&lt;ul>
&lt;li>Uma casa à venda em Blumenau&lt;/li>
&lt;li>Vendo terreno em Gaspar&lt;/li>
&lt;li>Alugo apartamento em Indaial&lt;/li>
&lt;/ul>
&lt;p>A matriz de incidência é:&lt;/p></description></item><item><title>Matriz de incidência termo-documento</title><link>https://juliocesarbatista.com/posts/matriz-incidencia-termo-documento/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/matriz-incidencia-termo-documento/</guid><description>&lt;p>Para obter as ocorrências de uma &lt;em>query booleana&lt;/em>, por exemplo, &lt;code>casa AND blumenau&lt;/code> seria necessário passar em todos os documentos procurando por &lt;code>casa&lt;/code> e depois procurar novamente por &lt;code>blumenau&lt;/code>.
De certa forma, essa abordagem não é completamente ruim.
Mas existem algumas abordagens que podem melhorar o tempo da consulta e consumo de memória.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Agora considere uma nova consulta, por exemplo, &lt;code>casa AND gaspar&lt;/code>, seria necessário repassar em todos os documentos novamente.
Assim, existe um certo custo computacional que pode ser otimizado.
Uma forma de evitar esse problema é criando um índice (assim como no final de um livro, onde são listadas as palavras e as páginas que elas aparecem).
Nesse caso, a consulta pode ser simplificada procurando pelas palavras &lt;code>casa&lt;/code> e &lt;code>blumenau&lt;/code> e filtrar apenas os documentos onde ambas aparecem.
Note que a otimização foi em relação à não precisar passar em todas as palavras de todos os documentos.&lt;/p></description></item><item><title>Python: conjuntos (sets)</title><link>https://juliocesarbatista.com/posts/python-sets/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/python-sets/</guid><description>&lt;p>Vamos falar um pouco sobre &lt;em>sets&lt;/em> (conjuntos) em &lt;em>python&lt;/em>.
Se você já trabalha com a linguagem, provavelmente já se deparou com esses casos, mas se está iniciando na linguagem, talvez sejam exemplos interessantes para aprender.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="por-que-conjuntos">
 Por que conjuntos?
 &lt;a class="heading-link" href="#por-que-conjuntos">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link para o cabeçalho">&lt;/i>
 &lt;span class="sr-only">Link para o cabeçalho&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>Conjuntos são coleções que não permitem elementos duplicados. Dessa forma, são uma ótima estrutura de dados para verificar se um elemento já existe e garantir que esse elemento exista apenas uma vez.&lt;/p></description></item><item><title>Matemágica para devs</title><link>https://juliocesarbatista.com/posts/matemagica-para-devs/</link><pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/matemagica-para-devs/</guid><description>&lt;p>Oi, tudo certo!?&lt;/p>
&lt;p>Nos dias 28/07/2018 e 11/08/2018 eu apresentei duas palestras sobre matemática com foco em conceitos úteis para desenvolvedores de software.
O conteúdo está disponível no &lt;a href="https://github.com/ejulio/talks/tree/master/matemagica-para-devs" class="external-link" target="_blank" rel="noopener">GitHub&lt;/a>.
De forma geral, vimos:&lt;/p>
&lt;ul>
&lt;li>Conceitos fundamentais da álgebra;&lt;/li>
&lt;li>Distribuições e os conceitos de média, moda, mediana e desvio padrão na estatística;&lt;/li>
&lt;li>Matrizes, vetores e &lt;em>norms&lt;/em> na álgebra linear;&lt;/li>
&lt;li>Funções, derivadas e otimização com cálculo.&lt;/li>
&lt;/ul>
&lt;p>A ideia era aproximar esses conceitos com Python e bibliotecas que facilitam essas operações.&lt;/p></description></item><item><title>Processamento de imagens com python</title><link>https://juliocesarbatista.com/posts/processamento-imagens-python-grupy/</link><pubDate>Sat, 20 Jan 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/processamento-imagens-python-grupy/</guid><description>&lt;p>Olá, tudo bem!?&lt;/p>
&lt;p>Na última semana de janeiro, ainda não tem data definida, vou falar sobre processamento de imagens com python e &lt;a href="http://scikit-image.org/" class="external-link" target="_blank" rel="noopener">scikit-image&lt;/a> no &lt;a href="https://www.meetup.com/hackerspaceblumenau/events/trlwpnyxcbkc/" class="external-link" target="_blank" rel="noopener">Grupy Blumenau&lt;/a>.
O notebook com o conteúdo da apresentação já está &lt;a href="https://github.com/ejulio/talks/blob/master/processamento-imagens-python/Processamento%20de%20imagens%20com%20python.ipynb" class="external-link" target="_blank" rel="noopener">disponível no GitHub&lt;/a>.&lt;/p>
&lt;p>Aparece por lá para conferir e trocar uma ideia :D&lt;/p></description></item><item><title>A normalização e o Gradient Descent</title><link>https://juliocesarbatista.com/posts/a-normalizacao-e-o-gradient-descent/</link><pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/a-normalizacao-e-o-gradient-descent/</guid><description>&lt;p>Vamos falar sobre machine learning.
Estou [enfim] participando do &lt;em>&lt;a href="https://www.coursera.org/learn/machine-learning" class="external-link" target="_blank" rel="noopener">MOOC&lt;/a>&lt;/em> do &lt;a href="https://twitter.com/AndrewYNg" class="external-link" target="_blank" rel="noopener">Andrew Ng, Ph. D.&lt;/a> no &lt;a href="http://coursera.org" class="external-link" target="_blank" rel="noopener">Coursera&lt;/a> e me deparei com a importância de normalizar os dados antes de efetuar a otimização do algoritmo de aprendizado.
Não leve a mal, sei, há certo tempo, que é importante normalizar os valores de entrada para que o algoritmo tenha uma melhor, e mais rápida, convergência.
Entretanto, nunca havia, ao menos até onde percebi, me deparado com o quanto esse pré-processamento implica no processo.&lt;/p></description></item><item><title>Desmistificando o Deep Learning com TensorFlow</title><link>https://juliocesarbatista.com/posts/desmistificando-o-deep-learning-com-tensorflow/</link><pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/desmistificando-o-deep-learning-com-tensorflow/</guid><description>&lt;p>Olá, tudo bem!?&lt;/p>
&lt;p>Eu e o &lt;a href="https://twitter.com/vitoralbiero" class="external-link" target="_blank" rel="noopener">Vítor Albiero&lt;/a> vamos falar sobre deep learning na &lt;a href="http://www.thedevelopersconference.com.br/tdc/2017/florianopolis/trilha-datascience-e-machine-learning" class="external-link" target="_blank" rel="noopener">The Developers Conference (TDC) Florianópolis 2017 na trilha de Data Science e Machine Learning&lt;/a>. A palestra se chama &amp;ldquo;Desmistificando o Deep Learning com TesnsorFlow&amp;rdquo; e também vai estar na trilha stadium da Intel e vai ser &lt;a href="https://www.eventials.com/Globalcode/quinta-de-manha-stadium-intel-floripa-2017/" class="external-link" target="_blank" rel="noopener">transmitida gratuitamente pela internet&lt;/a>.&lt;/p>
&lt;p>Nesses links você pode acessar os &lt;a href="https://github.com/ejulio/talks/blob/master/desmistificando-o-deep-learning-com-tensorflow/Desmistificando_o_Deep_Learning_com_TensorFlow.pdf" class="external-link" target="_blank" rel="noopener">slides&lt;/a> da talk e também os &lt;a href="https://github.com/ejulio/talks/blob/master/desmistificando-o-deep-learning-com-tensorflow" class="external-link" target="_blank" rel="noopener">códigos&lt;/a>.&lt;/p>
&lt;p>Espero que você goste!&lt;/p></description></item><item><title>Cross-validation: testando o desempenho de um classificador</title><link>https://juliocesarbatista.com/posts/cross-validation-testando-o-desempenho-de-um-classificador/</link><pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/cross-validation-testando-o-desempenho-de-um-classificador/</guid><description>&lt;p>Olá pessoal, tudo certo!?&lt;/p>
&lt;p>Hoje vamos falar sobre aprendizado de máquina. Não vamos falar sobre as técnicas de classificação, mas sobre as técnicas de verificação de desempenho dos algoritmos.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h1 id="dados-e-características">
 Dados e características
 &lt;a class="heading-link" href="#dados-e-caracter%c3%adsticas">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link para o cabeçalho">&lt;/i>
 &lt;span class="sr-only">Link para o cabeçalho&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;p>O exemplo de teste será a classificação de texto baseado no &lt;a href="http://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html" class="external-link" target="_blank" rel="noopener">tutorial de classificação de texto do &lt;em>scikit-learn&lt;/em>&lt;/a>. O código inicial é:&lt;/p></description></item></channel></rss>