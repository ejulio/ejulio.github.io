<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Grafos on Júlio César Batista</title><link>https://juliocesarbatista.com/tags/grafos/</link><description>Recent content in Grafos on Júlio César Batista</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Mon, 04 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://juliocesarbatista.com/tags/grafos/index.xml" rel="self" type="application/rss+xml"/><item><title>Grafos e consultas SQL recursivas</title><link>https://juliocesarbatista.com/posts/queries_sql_recursivas/</link><pubDate>Mon, 04 Sep 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/queries_sql_recursivas/</guid><description>&lt;p>Recentemente me deparei com o problema de trabalhar com grafos com SQL.
Dado o modelo de dados abaixo, como resolver (no fim do artigo existem alguns exemplos de grafos que podem ser usados para teste):&lt;/p>
&lt;ol>
&lt;li>Detectar se existem ciclos no grafo&lt;/li>
&lt;li>Encontrar todos os caminhos no grafo&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>create table graph (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	id varchar(100) primary key,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	name varchar(500) &lt;span style="font-weight:bold">not&lt;/span> null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create table node (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	graph_id varchar(100) references graph(id),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	name varchar(500) &lt;span style="font-weight:bold">not&lt;/span> null,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	primary key (graph_id, id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create table edge (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	graph_id varchar(100) references graph(id),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	from_id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	to_id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	cost &lt;span style="font-weight:bold">float&lt;/span> &lt;span style="font-weight:bold">not&lt;/span> null,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	foreign key (graph_id, from_id) references node(graph_id, id),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	foreign key (graph_id, to_id) references node(graph_id, id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Não vou entrar nos méritos no modelo, existem várias formas de modelar o grafo.
O ponto principal é como escrever um &lt;em>query&lt;/em> SQL para resolver o problema.&lt;/p></description></item><item><title>Diagram layout engines: Minimizing hierarchical edge crossings</title><link>https://juliocesarbatista.com/posts/diagram-layout-engines-edge-crossings/</link><pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/diagram-layout-engines-edge-crossings/</guid><description>&lt;p>No blog da Terrastruct &lt;a href="https://terrastruct.com/blog/post/diagram-layout-engines-crossing-minimization/" class="external-link" target="_blank" rel="noopener">https://terrastruct.com/blog/post/diagram-layout-engines-crossing-minimization/&lt;/a>&lt;/p></description></item></channel></rss>