<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Desenvolvimento de Software on Júlio César Batista</title><link>https://juliocesarbatista.com/tags/desenvolvimento-de-software/</link><description>Recent content in Desenvolvimento de Software on Júlio César Batista</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Mon, 04 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://juliocesarbatista.com/tags/desenvolvimento-de-software/index.xml" rel="self" type="application/rss+xml"/><item><title>Grafos e consultas SQL recursivas</title><link>https://juliocesarbatista.com/posts/queries_sql_recursivas/</link><pubDate>Mon, 04 Sep 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/queries_sql_recursivas/</guid><description>Recentemente me deparei com o problema de trabalhar com grafos com SQL. Dado o modelo de dados abaixo, como resolver (no fim do artigo existem alguns exemplos de grafos que podem ser usados para teste):
Detectar se existem ciclos no grafo Encontrar todos os caminhos no grafo create table graph ( id varchar(100) primary key, name varchar(500) not null ); create table node ( id varchar(100), graph_id varchar(100) references graph(id), name varchar(500) not null, primary key (graph_id, id) ); create table edge ( id varchar(100), graph_id varchar(100) references graph(id), from_id varchar(100), to_id varchar(100), cost float not null, foreign key (graph_id, from_id) references node(graph_id, id), foreign key (graph_id, to_id) references node(graph_id, id) ); Não vou entrar nos méritos no modelo, existem várias formas de modelar o grafo.</description></item><item><title>How to reduce noise in the data through data parsing</title><link>https://juliocesarbatista.com/posts/how-to-reduce-noise-in-the-data-through-data-parsing/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/how-to-reduce-noise-in-the-data-through-data-parsing/</guid><description>No blog da Zyte https://www.zyte.com/blog/how-to-reduce-noise-in-the-data-through-data-parsing/</description></item><item><title>Scrapy Cloud secrets: Hub Crawl Frontier and how to use it</title><link>https://juliocesarbatista.com/posts/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/</guid><description>No blog da Zyte https://www.zyte.com/blog/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/</description></item><item><title>Custom crawling &amp; News API: designing a web scraping solution</title><link>https://juliocesarbatista.com/posts/extract-articles-at-scale-designing-a-web-scraping-solution/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/extract-articles-at-scale-designing-a-web-scraping-solution/</guid><description>No blog da Zyte https://www.zyte.com/blog/extract-articles-at-scale-designing-a-web-scraping-solution/</description></item><item><title>Sobre métodos ágeis</title><link>https://juliocesarbatista.com/posts/sobre-metodos-ageis/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/sobre-metodos-ageis/</guid><description>Vamos falar sobre metodologias ágeis, principalmente em um SAAS (Software as a Service). Para começar, não sou um expert em metodologias ágeis, assim como não passei por todos os possíveis casos que eles podem envolver. Portanto, posso ter uma visão enviesada para os conceitos que acredito fazer mais sentido. Depois desse disclaimer, vamos lá!
Não me leve a mal, eu acho que Scrum (e outras metodologias baseadas em sprint) é uma metodologia fantástica, só não acredito que ele seja o melhor processo para uma empresa que trabalha com um SAAS.</description></item><item><title>Objectives and Key-Results (OKRs)</title><link>https://juliocesarbatista.com/posts/okrs/</link><pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/okrs/</guid><description>Vamos falar sobre desenvolvimento de software.
Objectives and Key-Results (OKRs) são uma prática/framework/metodologia para definir objetivos, os Objectives, e definir resultados que indiquem o quão próximos estamos desses objetivos, os Key-Results. Essa prática não é um framework ágil como o Scrum/XP/Kanban, mas sim uma forma de alinhar os objetivos da empresa com todos os indivíduos e como cada um pode contribuir nesses objetivos. Com isso, é possível colocar o template padrão de OKRs:</description></item></channel></rss>