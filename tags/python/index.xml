<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Júlio César Batista</title><link>https://juliocesarbatista.com/tags/python/</link><description>Recent content in Python on Júlio César Batista</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Sat, 29 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://juliocesarbatista.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Como deixar a sua aplicação até 20x mais lenta com FastAPI</title><link>https://juliocesarbatista.com/posts/fastapi-20x-mais-lento/</link><pubDate>Sat, 29 Jun 2024 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/fastapi-20x-mais-lento/</guid><description>Material da minha palestra Como deixar a sua aplicação até 20x mais lenta com FastAPI que apresentei no 34º encontro de Python em Blumenau. Os slides são uma adaptação de um estudo e palestra que fiz na Shippo.
Slides</description></item><item><title>A tale of concurrency through creativity in Python: a deep dive into how gevent works</title><link>https://juliocesarbatista.com/posts/a-tale-of-concurrency-through-creativity-in-python/</link><pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/a-tale-of-concurrency-through-creativity-in-python/</guid><description>gevent usa greenlets (corotinas ou, goroutines em go) ao invés de threads do sistema operacional. Essas operações são colaborativas, portanto elas precisam ceder (yield) a execução para outras rotinas. Por serem apenas rotinas no programa, sem intervenção do sistema operacional, são mais leves. Interessante como a biblioteca em C gevent resolve o problema. A biblioteca manipula a stack/heap para dar continuidade em uma rotina que deceu a execução. libev foi usada para manipular o loop de eventos e controlar a execução das greenlets Com monkey patching é possível tornar um código síncrono em assíncrono.</description></item><item><title>Isolamento de transações em bancos de dados relacionais</title><link>https://juliocesarbatista.com/posts/isolamento-transacoes-bancos-dados-relacionais/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/isolamento-transacoes-bancos-dados-relacionais/</guid><description>Estava lendo sobre os níveis de isolamento de transações em bancos de dados relacionais, especificamente no PostgreSQL e decidi fazer um projeto em python para simular os cenários de concorrência. O projeto está disponível no GitHub e espero que ajude a elucidar alguns detalhes sobre o funcionamento de transações em bancos de dados. Usei asyncio para a &amp;ldquo;concorrência&amp;rdquo; e gerenciar a execução entre duas &amp;ldquo;threads&amp;rdquo;, permitindo a interpolação de comandos SQL em duas transações separadas em momento especîficos para avaliar os resultados.</description></item><item><title>Correção ortográfica com índice k-gram</title><link>https://juliocesarbatista.com/posts/correcao-ortografica-k-gram-index/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/correcao-ortografica-k-gram-index/</guid><description>Ao escrever uma consulta, o usuário pode cometer erros ortográficos durante a digitação. Esses erros podem ter duas formas: escrita incorreta da palavra (comesso ao invés de começo), contexto (no meu casa ao invés de na minha casa). Note que no primeiro exemplo, a palavra está incorreta; no segundo, as palavras estão corretas mas o contexto é errado. Nesse momento, a ideia é ver como é possível fazer a correção de erros de escrito (primeiro caso).</description></item><item><title>Executando consultas por frases: Positional Index</title><link>https://juliocesarbatista.com/posts/phrase-queries-positional-index/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/phrase-queries-positional-index/</guid><description>Para realizar a consulta por frases (sequências de palavras) é necessário um índice k-gram. Porém, criar um índice todas as combinações de termos pode ocupar muito espaço em disco/memória. Principalmente se for necessário indexar combinações de 5 ou mais palavras, visto que muitas combinações podem aparecer apenas uma ou outra vez. Uma solução para esse problema é um positional index (índice de posições).
Em um índice invertido, termos são mapeados para listas com ids de documentos.</description></item><item><title>Compressão de índices: Variable Byte Encoding</title><link>https://juliocesarbatista.com/posts/compressao-indices-vbe/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/compressao-indices-vbe/</guid><description>Uma vez que o índice invertido está montado com postings lists, é necessário persistí-lo em disco. O detalhe é que, se o índice for persistido como texto em UTF-8, cada caractére vai requisitar ao menos 8 bytes. Portando, o id 4568912 requer 7 bytes para ser armazenado. A contrapartida é que, se for armazenado como um numérico (int por exemplo), precisa de apenas 4 bytes. Porém, é possível conseguir uma melhora na compressão ao considerar a estrutura de dados que será armazenada.</description></item><item><title>Executando consultas por frases</title><link>https://juliocesarbatista.com/posts/phrase-queries/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/phrase-queries/</guid><description>A partir de um índice de termos/documentos só é possível efetuar consultas de ocorrência de termos e filtros com operadores AND, OR e NOT. Entretanto, o que é preciso para executar uma consulta por presidente do Brasil? A forma mais simples, é converter essa consulta em presidente AND do AND Brasil (o do pode ser removido se quiser remover stop words). O detalhe é que essa consulta vai retornar qualquer documento que contenha presidente e Brasil, mas que não não fale necessariamento do presidente do Brasil.</description></item><item><title>Algoritmos para consultar em índices</title><link>https://juliocesarbatista.com/posts/algoritmos-indices/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/algoritmos-indices/</guid><description>Uma das vantagens do índice invertido é a possibilidade de otimizar os algoritmos utilizados nas consultas. Esses algoritmos já são implementados por set no python, mas não garantem a sequência dos ids dos documentos e também não permitem algumas otimizações. Portanto, é necessário passar por esses algoritmos para ver as extensões e como elas podem ajudar.
intersecção de conjuntos Uma consulta casa AND blumenau precisa efetuar a intersecção entre os documentos de casa e os documentos de blumenau.</description></item><item><title>Índice invertido (inverted index)</title><link>https://juliocesarbatista.com/posts/indice-invertido/</link><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/indice-invertido/</guid><description>A matriz de incidência termo-documento é uma das formas de representar um índice de termos por documento. Mesmo usando o conceito de uma matriz esparsa, essa estrutura pode crescer muito para ser usada em memória. Uma alternativa para esse caso é usar um índice invertido (inverted index).
Dados os seguintes documentos como exemplo:
Uma casa à venda em Blumenau Vendo terreno em Gaspar Alugo apartamento em Indaial A matriz de incidência é:</description></item><item><title>Matriz de incidência termo-documento</title><link>https://juliocesarbatista.com/posts/matriz-incidencia-termo-documento/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/matriz-incidencia-termo-documento/</guid><description>Para obter as ocorrências de uma query booleana, por exemplo, casa AND blumenau seria necessário passar em todos os documentos procurando por casa e depois procurar novamente por blumenau. De certa forma, essa abordagem não é completamente ruim. Mas existem algumas abordagens que podem melhorar o tempo da consulta e consumo de memória.
Agora considere uma nova consulta, por exemplo, casa AND gaspar, seria necessário repassar em todos os documentos novamente.</description></item><item><title>Python: conjuntos (sets)</title><link>https://juliocesarbatista.com/posts/python-sets/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/python-sets/</guid><description>Vamos falar um pouco sobre sets (conjuntos) em python. Se você já trabalha com a linguagem, provavelmente já se deparou com esses casos, mas se está iniciando na linguagem, talvez sejam exemplos interessantes para aprender.
Por que conjuntos? Conjuntos são coleções que não permitem elementos duplicados. Dessa forma, são uma ótima estrutura de dados para verificar se um elemento já existe e garantir que esse elemento exista apenas uma vez.</description></item><item><title>Matemágica para devs</title><link>https://juliocesarbatista.com/posts/matemagica-para-devs/</link><pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/matemagica-para-devs/</guid><description>Oi, tudo certo!?
Nos dias 28/07/2018 e 11/08/2018 eu apresentei duas palestras sobre matemática com foco em conceitos úteis para desenvolvedores de software. O conteúdo está disponível no GitHub. De forma geral, vimos:
Conceitos fundamentais da álgebra; Distribuições e os conceitos de média, moda, mediana e desvio padrão na estatística; Matrizes, vetores e norms na álgebra linear; Funções, derivadas e otimização com cálculo. A ideia era aproximar esses conceitos com Python e bibliotecas que facilitam essas operações.</description></item><item><title>Processamento de imagens com python</title><link>https://juliocesarbatista.com/posts/processamento-imagens-python-grupy/</link><pubDate>Sat, 20 Jan 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/processamento-imagens-python-grupy/</guid><description>Olá, tudo bem!?
Na última semana de janeiro, ainda não tem data definida, vou falar sobre processamento de imagens com python e scikit-image no Grupy Blumenau. O notebook com o conteúdo da apresentação já está disponível no GitHub.
Aparece por lá para conferir e trocar uma ideia :D</description></item><item><title>A normalização e o Gradient Descent</title><link>https://juliocesarbatista.com/posts/a-normalizacao-e-o-gradient-descent/</link><pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/a-normalizacao-e-o-gradient-descent/</guid><description>Vamos falar sobre machine learning. Estou [enfim] participando do MOOC do Andrew Ng, Ph. D. no Coursera e me deparei com a importância de normalizar os dados antes de efetuar a otimização do algoritmo de aprendizado. Não leve a mal, sei, há certo tempo, que é importante normalizar os valores de entrada para que o algoritmo tenha uma melhor, e mais rápida, convergência. Entretanto, nunca havia, ao menos até onde percebi, me deparado com o quanto esse pré-processamento implica no processo.</description></item><item><title>Desmistificando o Deep Learning com TensorFlow</title><link>https://juliocesarbatista.com/posts/desmistificando-o-deep-learning-com-tensorflow/</link><pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/desmistificando-o-deep-learning-com-tensorflow/</guid><description>Olá, tudo bem!?
Eu e o Vítor Albiero vamos falar sobre deep learning na The Developers Conference (TDC) Florianópolis 2017 na trilha de Data Science e Machine Learning. A palestra se chama &amp;ldquo;Desmistificando o Deep Learning com TesnsorFlow&amp;rdquo; e também vai estar na trilha stadium da Intel e vai ser transmitida gratuitamente pela internet.
Nesses links você pode acessar os slides da talk e também os códigos.
Espero que você goste!</description></item><item><title>Cross-validation: testando o desempenho de um classificador</title><link>https://juliocesarbatista.com/posts/cross-validation-testando-o-desempenho-de-um-classificador/</link><pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/cross-validation-testando-o-desempenho-de-um-classificador/</guid><description>Olá pessoal, tudo certo!?
Hoje vamos falar sobre aprendizado de máquina. Não vamos falar sobre as técnicas de classificação, mas sobre as técnicas de verificação de desempenho dos algoritmos.
Dados e características O exemplo de teste será a classificação de texto baseado no tutorial de classificação de texto do scikit-learn. O código inicial é:
Entre as linhas 12 e 15 definimos os dados que serão usados para o teste de classificação.</description></item></channel></rss>