<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Desenvolvimento De Software on Júlio César Batista</title><link>https://juliocesarbatista.com/tags/desenvolvimento-de-software/</link><description>Recent content in Desenvolvimento De Software on Júlio César Batista</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Thu, 12 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://juliocesarbatista.com/tags/desenvolvimento-de-software/index.xml" rel="self" type="application/rss+xml"/><item><title>Why is my FastAPI throughput so low?</title><link>https://juliocesarbatista.com/posts/why-is-my-fastapi-throughput-so-low/</link><pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/why-is-my-fastapi-throughput-so-low/</guid><description>&lt;p>No blog da Shippo &lt;a href="https://goshippo.com/blog/why-is-my-fastapi-throughput-so-low" class="external-link" target="_blank" rel="noopener">https://goshippo.com/blog/why-is-my-fastapi-throughput-so-low&lt;/a>&lt;/p></description></item><item><title>Grafos e consultas SQL recursivas</title><link>https://juliocesarbatista.com/posts/queries_sql_recursivas/</link><pubDate>Mon, 04 Sep 2023 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/queries_sql_recursivas/</guid><description>&lt;p>Recentemente me deparei com o problema de trabalhar com grafos com SQL.
Dado o modelo de dados abaixo, como resolver (no fim do artigo existem alguns exemplos de grafos que podem ser usados para teste):&lt;/p>
&lt;ol>
&lt;li>Detectar se existem ciclos no grafo&lt;/li>
&lt;li>Encontrar todos os caminhos no grafo&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>create table graph (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	id varchar(100) primary key,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	name varchar(500) &lt;span style="font-weight:bold">not&lt;/span> null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create table node (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	graph_id varchar(100) references graph(id),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	name varchar(500) &lt;span style="font-weight:bold">not&lt;/span> null,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	primary key (graph_id, id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create table edge (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	graph_id varchar(100) references graph(id),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	from_id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	to_id varchar(100),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	cost &lt;span style="font-weight:bold">float&lt;/span> &lt;span style="font-weight:bold">not&lt;/span> null,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	foreign key (graph_id, from_id) references node(graph_id, id),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	foreign key (graph_id, to_id) references node(graph_id, id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Não vou entrar nos méritos no modelo, existem várias formas de modelar o grafo.
O ponto principal é como escrever um &lt;em>query&lt;/em> SQL para resolver o problema.&lt;/p></description></item><item><title>How to reduce noise in the data through data parsing</title><link>https://juliocesarbatista.com/posts/how-to-reduce-noise-in-the-data-through-data-parsing/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/how-to-reduce-noise-in-the-data-through-data-parsing/</guid><description>&lt;p>No blog da Zyte &lt;a href="https://www.zyte.com/blog/how-to-reduce-noise-in-the-data-through-data-parsing/" class="external-link" target="_blank" rel="noopener">https://www.zyte.com/blog/how-to-reduce-noise-in-the-data-through-data-parsing/&lt;/a>&lt;/p></description></item><item><title>Scrapy Cloud secrets: Hub Crawl Frontier and how to use it</title><link>https://juliocesarbatista.com/posts/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/</guid><description>&lt;p>No blog da Zyte &lt;a href="https://www.zyte.com/blog/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/" class="external-link" target="_blank" rel="noopener">https://www.zyte.com/blog/scrapy-cloud-secrets-hub-crawl-frontier-and-how-to-use-it/&lt;/a>&lt;/p></description></item><item><title>Custom crawling &amp; News API: designing a web scraping solution</title><link>https://juliocesarbatista.com/posts/extract-articles-at-scale-designing-a-web-scraping-solution/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/extract-articles-at-scale-designing-a-web-scraping-solution/</guid><description>&lt;p>No blog da Zyte &lt;a href="https://www.zyte.com/blog/extract-articles-at-scale-designing-a-web-scraping-solution/" class="external-link" target="_blank" rel="noopener">https://www.zyte.com/blog/extract-articles-at-scale-designing-a-web-scraping-solution/&lt;/a>&lt;/p></description></item><item><title>Sobre métodos ágeis</title><link>https://juliocesarbatista.com/posts/sobre-metodos-ageis/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/sobre-metodos-ageis/</guid><description>&lt;p>Vamos falar sobre metodologias ágeis, principalmente em um SAAS (&lt;em>Software as a Service&lt;/em>). Para começar, não sou um &lt;em>expert&lt;/em> em metodologias ágeis, assim como não passei por todos os possíveis casos que eles podem envolver. Portanto, posso ter uma visão enviesada para os conceitos que acredito fazer mais sentido. Depois desse &lt;em>disclaimer&lt;/em>, vamos lá!&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Não me leve a mal, eu acho que Scrum (e outras metodologias baseadas em &lt;em>sprint&lt;/em>) é uma metodologia fantástica, só não acredito que ele seja o melhor processo para uma empresa que trabalha com um SAAS. Por exemplo, o primeiro princípio ágil diz, basicamente, que &lt;em>entregamos e validamos o software continua e rapidamente com o cliente&lt;/em>. Porém, se você está em um SAAS e trabalha com &lt;em>sprints&lt;/em> de duas semanas, as entregas só ocorrem no final das &lt;em>sprints&lt;/em>, ou seja, o cliente só vê a nova &lt;em>feature&lt;/em> à cada 15 dias. Bem, se considerar os casos mais antigos, no RUP, as entregas eram a cada x meses, então estamos bem.&lt;/p></description></item><item><title>Objectives and Key-Results (OKRs)</title><link>https://juliocesarbatista.com/posts/okrs/</link><pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate><guid>https://juliocesarbatista.com/posts/okrs/</guid><description>&lt;p>Vamos falar sobre desenvolvimento de software.&lt;/p>
&lt;p>&lt;em>Objectives and Key-Results&lt;/em> (OKRs) são uma prática/&lt;em>framework&lt;/em>/metodologia para definir objetivos, os &lt;em>Objectives&lt;/em>, e definir resultados que indiquem o quão próximos estamos desses objetivos, os &lt;em>Key-Results&lt;/em>.
Essa prática não é um &lt;em>framework&lt;/em> ágil como o Scrum/XP/Kanban, mas sim uma forma de alinhar os objetivos da empresa com todos os indivíduos e como cada um pode contribuir nesses objetivos.
Com isso, é possível colocar o &lt;em>template&lt;/em> padrão de OKRs:&lt;/p></description></item></channel></rss>